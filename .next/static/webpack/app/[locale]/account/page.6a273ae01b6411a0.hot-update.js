"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[locale]/account/page",{

/***/ "(app-pages-browser)/./src/hooks/useAuth.ts":
/*!******************************!*\
  !*** ./src/hooks/useAuth.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/react */ \"(app-pages-browser)/./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _redux_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/redux/hooks */ \"(app-pages-browser)/./src/redux/hooks.ts\");\n/* __next_internal_client_entry_do_not_use__ useAuth auto */ \n\n\n\n/**\n * Hook para centralizar la lógica de autenticación\n *\n * @returns Objeto con métodos y estado de autenticación\n *\n * @example\n * const { login, loginWithGoogle, logout, isLoading, error } = useAuth();\n *\n * // Iniciar sesión con email y contraseña\n * const handleSubmit = async (e) => {\n *   e.preventDefault();\n *   const success = await login({ email, password });\n *   if (success) {\n *     // Hacer algo después del login exitoso\n *   }\n * };\n */ function useAuth() {\n    const { data: session, status, update } = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_1__.useSession)();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const locale = (0,_redux_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector)((state)=>state.language.locale) || \"en\";\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    /**\n   * Iniciar sesión con email y contraseña\n   */ const login = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (credentials)=>{\n        setIsLoading(true);\n        setError(null);\n        try {\n            console.log(\"\\uD83D\\uDD11 useAuth: Iniciando sesi\\xf3n con credenciales...\");\n            const result = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_1__.signIn)(\"credentials\", {\n                redirect: false,\n                email: credentials.email,\n                password: credentials.password\n            });\n            if (result === null || result === void 0 ? void 0 : result.error) {\n                console.log(\"❌ useAuth: Error en login:\", result.error);\n                setError({\n                    message: \"Credenciales incorrectas\"\n                });\n                return false;\n            }\n            if (result === null || result === void 0 ? void 0 : result.ok) {\n                console.log(\"✅ useAuth: Login exitoso\");\n                // Actualizar la sesión\n                await update();\n                console.log(\"✅ useAuth: Sesi\\xf3n actualizada\");\n                // Forzar actualización de la UI usando router\n                router.refresh();\n                // Redirección después de login exitoso\n                console.log(\"\\uD83D\\uDD04 useAuth: Redirigiendo despu\\xe9s de login exitoso...\");\n                router.push(\"/\".concat(locale));\n                return true;\n            }\n            return false;\n        } catch (err) {\n            console.error(\"❌ useAuth: Error de autenticaci\\xf3n:\", err);\n            setError({\n                message: \"Ocurri\\xf3 un error durante la autenticaci\\xf3n\",\n                code: \"auth/unknown-error\"\n            });\n            return false;\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        update,\n        router,\n        locale\n    ]);\n    /**\n   * Iniciar sesión con Google\n   */ const loginWithGoogle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        setIsLoading(true);\n        setError(null);\n        try {\n            console.log(\"\\uD83D\\uDD11 useAuth: Iniciando login con Google...\");\n            // Usar callbackUrl para asegurar que la redirección funcione correctamente\n            const callbackUrl = \"\".concat(window.location.origin, \"/\").concat(locale);\n            const result = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_1__.signIn)(\"google\", {\n                redirect: false,\n                callbackUrl\n            });\n            if (result === null || result === void 0 ? void 0 : result.error) {\n                console.log(\"❌ useAuth: Error en login con Google:\", result.error);\n                setError({\n                    message: \"Error al iniciar sesi\\xf3n con Google\"\n                });\n                return false;\n            }\n            if (result === null || result === void 0 ? void 0 : result.ok) {\n                console.log(\"✅ useAuth: Login con Google exitoso\");\n                // Si hay una URL de redirección, navegar a ella\n                if (result.url) {\n                    console.log(\"\\uD83D\\uDD04 useAuth: Redirigiendo a:\", result.url);\n                    window.location.href = result.url;\n                    return true;\n                }\n                // Si no hay URL de redirección, actualizar la sesión y refrescar\n                await update();\n                router.refresh();\n                router.push(\"/\".concat(locale));\n                return true;\n            }\n            return false;\n        } catch (err) {\n            console.error(\"❌ useAuth: Error de autenticaci\\xf3n con Google:\", err);\n            setError({\n                message: \"Error al iniciar sesi\\xf3n con Google\",\n                code: \"auth/google-signin-failed\"\n            });\n            return false;\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        update,\n        router,\n        locale\n    ]);\n    /**\n   * Registrar un nuevo usuario\n   * Nota: Esta función es un ejemplo y debe adaptarse a tu implementación real\n   */ const register = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (credentials)=>{\n        setIsLoading(true);\n        setError(null);\n        try {\n            // Aquí implementarías la lógica real de registro\n            // Por ejemplo, una llamada a tu API\n            console.log(\"\\uD83D\\uDD11 useAuth: Registrando nuevo usuario...\");\n            // Simulación de registro exitoso\n            await new Promise((resolve)=>setTimeout(resolve, 1000));\n            // Después del registro exitoso, iniciar sesión automáticamente\n            return await login({\n                email: credentials.email,\n                password: credentials.password\n            });\n        } catch (err) {\n            console.error(\"❌ useAuth: Error en registro:\", err);\n            setError({\n                message: \"Error al registrar usuario\",\n                code: \"auth/registration-failed\"\n            });\n            return false;\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        login\n    ]);\n    /**\n   * Cerrar sesión\n   */ const logout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        setIsLoading(true);\n        try {\n            console.log(\"\\uD83D\\uDD04 useAuth: Cerrando sesi\\xf3n...\");\n            // Cerrar sesión con NextAuth\n            // Usamos redirect: true para forzar una recarga completa de la página\n            // Esto garantiza que el estado de la sesión se actualice correctamente\n            await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_1__.signOut)({\n                redirect: true,\n                callbackUrl: \"/\".concat(locale)\n            });\n            // Nota: El código después de signOut con redirect: true no se ejecutará\n            // porque la página se recargará automáticamente\n            return true;\n        } catch (err) {\n            console.error(\"❌ useAuth: Error al cerrar sesi\\xf3n:\", err);\n            setError({\n                message: \"Error al cerrar sesi\\xf3n\",\n                code: \"auth/signout-failed\"\n            });\n            return false;\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        locale\n    ]);\n    /**\n   * Limpiar errores de autenticación\n   */ const clearError = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setError(null);\n    }, []);\n    return {\n        session,\n        status,\n        isLoading,\n        error,\n        isAuthenticated: status === \"authenticated\" && !!session,\n        login,\n        loginWithGoogle,\n        register,\n        logout,\n        clearError\n    };\n} // \"use client\"\n // import { useState, useCallback } from \"react\"\n // import { signIn, signOut, useSession } from \"next-auth/react\"\n // import { useRouter } from \"next/navigation\"\n // import { useAppSelector } from \"@/redux/hooks\"\n // interface LoginCredentials {\n //   email: string\n //   password: string\n // }\n // interface RegisterCredentials extends LoginCredentials {\n //   name: string\n // }\n // interface AuthError {\n //   message: string\n //   code?: string\n // }\n // /**\n //  * Hook para centralizar la lógica de autenticación\n //  *\n //  * @returns Objeto con métodos y estado de autenticación\n //  *\n //  * @example\n //  * const { login, loginWithGoogle, logout, isLoading, error } = useAuth();\n //  *\n //  * // Iniciar sesión con email y contraseña\n //  * const handleSubmit = async (e) => {\n //  *   e.preventDefault();\n //  *   const success = await login({ email, password });\n //  *   if (success) {\n //  *     // Hacer algo después del login exitoso\n //  *   }\n //  * };\n //  */\n // export function useAuth() {\n //   const { data: session, status, update } = useSession()\n //   const router = useRouter()\n //   const locale = useAppSelector((state) => state.language.locale) || \"en\"\n //   const [isLoading, setIsLoading] = useState(false)\n //   const [error, setError] = useState<AuthError | null>(null)\n //   /**\n //    * Iniciar sesión con email y contraseña\n //    */\n //   const login = useCallback(\n //     async (credentials: LoginCredentials) => {\n //       setIsLoading(true)\n //       setError(null)\n //       try {\n //         console.log(\"🔑 useAuth: Iniciando sesión con credenciales...\")\n //         const result = await signIn(\"credentials\", {\n //           redirect: false,\n //           email: credentials.email,\n //           password: credentials.password,\n //         })\n //         if (result?.error) {\n //           console.log(\"❌ useAuth: Error en login:\", result.error)\n //           setError({ message: \"Credenciales incorrectas\" })\n //           return false\n //         }\n //         if (result?.ok) {\n //           console.log(\"✅ useAuth: Login exitoso\")\n //           // Actualizar la sesión\n //           await update()\n //           console.log(\"✅ useAuth: Sesión actualizada\")\n //           // Forzar actualización de la UI usando router\n //           router.refresh()\n //           // SOLUCIÓN AGRESIVA: Recargar la página después de un breve retraso\n //           // Esto garantiza que todos los componentes se actualicen correctamente\n //           console.log(\"🔄 useAuth: Programando recarga de página para asegurar actualización completa...\")\n //           setTimeout(() => {\n //             console.log(\"🔄 useAuth: Recargando página...\")\n //             window.location.href = `/${locale}`\n //           }, 100)\n //           return true\n //         }\n //         return false\n //       } catch (err) {\n //         console.error(\"❌ useAuth: Error de autenticación:\", err)\n //         setError({\n //           message: \"Ocurrió un error durante la autenticación\",\n //           code: \"auth/unknown-error\",\n //         })\n //         return false\n //       } finally {\n //         setIsLoading(false)\n //       }\n //     },\n //     [update, router],\n //   )\n //   /**\n //    * Iniciar sesión con Google\n //    */\n //   const loginWithGoogle = useCallback(async () => {\n //     setIsLoading(true)\n //     setError(null)\n //     try {\n //       console.log(\"🔑 useAuth: Iniciando login con Google...\")\n //       const result = await signIn(\"google\", { redirect: false })\n //       if (result?.error) {\n //         console.log(\"❌ useAuth: Error en login con Google:\", result.error)\n //         setError({ message: \"Error al iniciar sesión con Google\" })\n //         return false\n //       }\n //       if (result?.ok) {\n //         console.log(\"✅ useAuth: Login con Google exitoso\")\n //         // Actualizar la sesión\n //         await update()\n //         // Forzar actualización de la UI\n //         router.refresh()\n //         // SOLUCIÓN AGRESIVA: Recargar la página después de un breve retraso\n //         console.log(\"🔄 useAuth: Programando recarga de página para asegurar actualización completa...\")\n //         setTimeout(() => {\n //           console.log(\"🔄 useAuth: Recargando página...\")\n //           window.location.href = `/${locale}`\n //         }, 100)\n //         return true\n //       }\n //       return false\n //     } catch (err) {\n //       console.error(\"❌ useAuth: Error de autenticación con Google:\", err)\n //       setError({\n //         message: \"Error al iniciar sesión con Google\",\n //         code: \"auth/google-signin-failed\",\n //       })\n //       return false\n //     } finally {\n //       setIsLoading(false)\n //     }\n //   }, [update, router])\n //   /**\n //    * Registrar un nuevo usuario\n //    * Nota: Esta función es un ejemplo y debe adaptarse a tu implementación real\n //    */\n //   const register = useCallback(\n //     async (credentials: RegisterCredentials) => {\n //       setIsLoading(true)\n //       setError(null)\n //       try {\n //         // Aquí implementarías la lógica real de registro\n //         // Por ejemplo, una llamada a tu API\n //         console.log(\"🔑 useAuth: Registrando nuevo usuario...\")\n //         // Simulación de registro exitoso\n //         await new Promise((resolve) => setTimeout(resolve, 1000))\n //         // Después del registro exitoso, iniciar sesión automáticamente\n //         return await login({\n //           email: credentials.email,\n //           password: credentials.password,\n //         })\n //       } catch (err) {\n //         console.error(\"❌ useAuth: Error en registro:\", err)\n //         setError({\n //           message: \"Error al registrar usuario\",\n //           code: \"auth/registration-failed\",\n //         })\n //         return false\n //       } finally {\n //         setIsLoading(false)\n //       }\n //     },\n //     [login],\n //   )\n //   /**\n //    * Cerrar sesión\n //    */\n //   const logout = useCallback(async () => {\n //     setIsLoading(true)\n //     try {\n //       console.log(\"🔄 useAuth: Cerrando sesión...\")\n //       await signOut({ redirect: false })\n //       console.log(\"✅ useAuth: Sesión cerrada correctamente\")\n //       // Forzar actualización de la UI usando router\n //       router.refresh()\n //       // SOLUCIÓN AGRESIVA: Recargar la página después de un breve retraso\n //       console.log(\"🔄 useAuth: Programando recarga de página para asegurar actualización completa...\")\n //       setTimeout(() => {\n //         console.log(\"🔄 useAuth: Recargando página...\")\n //         window.location.href = `/${locale}`\n //       }, 100)\n //       return true\n //     } catch (err) {\n //       console.error(\"❌ useAuth: Error al cerrar sesión:\", err)\n //       setError({\n //         message: \"Error al cerrar sesión\",\n //         code: \"auth/signout-failed\",\n //       })\n //       return false\n //     } finally {\n //       setIsLoading(false)\n //     }\n //   }, [router, locale])\n //   /**\n //    * Limpiar errores de autenticación\n //    */\n //   const clearError = useCallback(() => {\n //     setError(null)\n //   }, [])\n //   return {\n //     session,\n //     status,\n //     isLoading,\n //     error,\n //     isAuthenticated: status === \"authenticated\" && !!session,\n //     login,\n //     loginWithGoogle,\n //     register,\n //     logout,\n //     clearError,\n //   }\n // }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useAuth.ts\n"));

/***/ })

});