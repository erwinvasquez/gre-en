"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/weather/route";
exports.ids = ["app/api/weather/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fweather%2Froute&page=%2Fapi%2Fweather%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fweather%2Froute.ts&appDir=%2FUsers%2Ferwinvasquez%2FDesarrollo%2FNext%2Fgre-en%20v2%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ferwinvasquez%2FDesarrollo%2FNext%2Fgre-en%20v2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fweather%2Froute&page=%2Fapi%2Fweather%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fweather%2Froute.ts&appDir=%2FUsers%2Ferwinvasquez%2FDesarrollo%2FNext%2Fgre-en%20v2%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ferwinvasquez%2FDesarrollo%2FNext%2Fgre-en%20v2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_erwinvasquez_Desarrollo_Next_gre_en_v2_src_app_api_weather_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/weather/route.ts */ \"(rsc)/./src/app/api/weather/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/weather/route\",\n        pathname: \"/api/weather\",\n        filename: \"route\",\n        bundlePath: \"app/api/weather/route\"\n    },\n    resolvedPagePath: \"/Users/erwinvasquez/Desarrollo/Next/gre-en v2/src/app/api/weather/route.ts\",\n    nextConfigOutput,\n    userland: _Users_erwinvasquez_Desarrollo_Next_gre_en_v2_src_app_api_weather_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/weather/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ3ZWF0aGVyJTJGcm91dGUmcGFnZT0lMkZhcGklMkZ3ZWF0aGVyJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGd2VhdGhlciUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmVyd2ludmFzcXVleiUyRkRlc2Fycm9sbG8lMkZOZXh0JTJGZ3JlLWVuJTIwdjIlMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGZXJ3aW52YXNxdWV6JTJGRGVzYXJyb2xsbyUyRk5leHQlMkZncmUtZW4lMjB2MiZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDMEI7QUFDdkc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItcHJ1ZWJhLz85ZmI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9lcndpbnZhc3F1ZXovRGVzYXJyb2xsby9OZXh0L2dyZS1lbiB2Mi9zcmMvYXBwL2FwaS93ZWF0aGVyL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS93ZWF0aGVyL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvd2VhdGhlclwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvd2VhdGhlci9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9lcndpbnZhc3F1ZXovRGVzYXJyb2xsby9OZXh0L2dyZS1lbiB2Mi9zcmMvYXBwL2FwaS93ZWF0aGVyL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS93ZWF0aGVyL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fweather%2Froute&page=%2Fapi%2Fweather%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fweather%2Froute.ts&appDir=%2FUsers%2Ferwinvasquez%2FDesarrollo%2FNext%2Fgre-en%20v2%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ferwinvasquez%2FDesarrollo%2FNext%2Fgre-en%20v2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/weather/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/weather/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const lat = searchParams.get(\"lat\");\n    const lng = searchParams.get(\"lng\");\n    if (!lat || !lng) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Latitude and longitude are required\"\n        }, {\n            status: 400\n        });\n    }\n    const apiKey = process.env.OPENWEATHER_API_KEY;\n    if (!apiKey) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"OpenWeather API key not configured\"\n        }, {\n            status: 500\n        });\n    }\n    const debugInfo = {\n        request: {\n            lat: Number.parseFloat(lat),\n            lng: Number.parseFloat(lng),\n            timestamp: new Date().toISOString()\n        },\n        apis: {\n            weather: null,\n            oneCall: null\n        },\n        calculations: {\n            solarRadiation: {\n                method: \"\",\n                rawValue: 0,\n                adjustedValue: 0,\n                factors: {}\n            }\n        },\n        errors: []\n    };\n    try {\n        // 1. Obtener datos meteorológicos actuales\n        console.log(\"\\uD83C\\uDF24️ Fetching current weather data...\");\n        const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${apiKey}&units=metric`;\n        const weatherResponse = await fetch(weatherUrl);\n        if (!weatherResponse.ok) {\n            const errorText = await weatherResponse.text();\n            debugInfo.errors.push(`Weather API Error: ${weatherResponse.status} - ${errorText}`);\n            throw new Error(`Weather API failed: ${weatherResponse.status}`);\n        }\n        const weatherData = await weatherResponse.json();\n        debugInfo.apis.weather = {\n            url: weatherUrl.replace(apiKey, \"***API_KEY***\"),\n            status: weatherResponse.status,\n            data: weatherData\n        };\n        console.log(\"✅ Weather data obtained:\", weatherData.name, weatherData.sys.country);\n        // 2. Intentar obtener datos de One Call API\n        console.log(\"☀️ Attempting One Call API...\");\n        const oneCallUrl = `https://api.openweathermap.org/data/3.0/onecall?lat=${lat}&lon=${lng}&appid=${apiKey}&units=metric&exclude=minutely,hourly,alerts`;\n        let solarRadiation = 5.0;\n        let calculationMethod = \"fallback\";\n        try {\n            const oneCallResponse = await fetch(oneCallUrl);\n            debugInfo.apis.oneCall = {\n                url: oneCallUrl.replace(apiKey, \"***API_KEY***\"),\n                status: oneCallResponse.status,\n                data: null,\n                error: null\n            };\n            if (oneCallResponse.ok) {\n                const oneCallData = await oneCallResponse.json();\n                debugInfo.apis.oneCall.data = oneCallData;\n                console.log(\"✅ One Call data obtained\");\n                if (oneCallData.daily && oneCallData.daily.length > 0) {\n                    const dailyData = oneCallData.daily.slice(0, 7);\n                    const uvValues = dailyData.map((day)=>day.uvi || 0);\n                    const avgUV = uvValues.reduce((sum, uv)=>sum + uv, 0) / uvValues.length;\n                    // Convertir UV Index a radiación solar\n                    const rawRadiation = avgUV * 0.4 + 2.5;\n                    solarRadiation = rawRadiation;\n                    calculationMethod = \"uv_index\";\n                    debugInfo.calculations.solarRadiation = {\n                        method: \"UV Index from One Call API\",\n                        rawValue: rawRadiation,\n                        adjustedValue: solarRadiation,\n                        factors: {\n                            uvValues: uvValues,\n                            averageUV: avgUV,\n                            conversionFormula: \"UV_Index \\xd7 0.4 + 2.5\"\n                        }\n                    };\n                    console.log(`📊 Solar radiation from UV: ${solarRadiation.toFixed(2)} kWh/m²/day`);\n                }\n            } else {\n                const errorText = await oneCallResponse.text();\n                debugInfo.apis.oneCall.error = `${oneCallResponse.status} - ${errorText}`;\n                debugInfo.errors.push(`One Call API Error: ${oneCallResponse.status} - ${errorText}`);\n                console.log(\"❌ One Call API failed, using fallback\");\n            }\n        } catch (oneCallError) {\n            debugInfo.apis.oneCall.error = oneCallError instanceof Error ? oneCallError.message : \"Unknown error\";\n            debugInfo.errors.push(`One Call API Exception: ${oneCallError}`);\n            console.log(\"❌ One Call API exception:\", oneCallError);\n        }\n        // 3. Si no obtuvimos datos de One Call, usar estimación\n        if (calculationMethod === \"fallback\") {\n            console.log(\"\\uD83D\\uDD04 Using fallback calculation...\");\n            const now = new Date();\n            const dayOfYear = Math.floor((now.getTime() - new Date(now.getFullYear(), 0, 0).getTime()) / 86400000);\n            // Ajuste estacional\n            const seasonalFactor = 0.8 + 0.4 * Math.cos(2 * Math.PI * (dayOfYear - 172) / 365);\n            // Ajuste por latitud\n            const latitudeFactor = Math.cos(Math.abs(Number.parseFloat(lat)) * Math.PI / 180);\n            // Ajuste por nubosidad\n            const cloudinessFactor = 1 - weatherData.clouds.all / 100 * 0.3;\n            const baseRadiation = 5.5;\n            const rawRadiation = baseRadiation * seasonalFactor * latitudeFactor * cloudinessFactor;\n            solarRadiation = rawRadiation;\n            debugInfo.calculations.solarRadiation = {\n                method: \"Mathematical estimation\",\n                rawValue: rawRadiation,\n                adjustedValue: solarRadiation,\n                factors: {\n                    baseRadiation: baseRadiation,\n                    seasonalFactor: seasonalFactor,\n                    latitudeFactor: latitudeFactor,\n                    cloudinessFactor: cloudinessFactor,\n                    dayOfYear: dayOfYear,\n                    cloudiness: weatherData.clouds.all,\n                    formula: \"base \\xd7 seasonal \\xd7 latitude \\xd7 cloudiness\"\n                }\n            };\n            console.log(`📊 Solar radiation estimated: ${solarRadiation.toFixed(2)} kWh/m²/day`);\n        }\n        // 4. Aplicar límites de seguridad\n        const originalRadiation = solarRadiation;\n        solarRadiation = Math.max(2.0, Math.min(8.0, solarRadiation));\n        if (originalRadiation !== solarRadiation) {\n            debugInfo.calculations.solarRadiation.adjustedValue = solarRadiation;\n            debugInfo.calculations.solarRadiation.factors.limitApplied = {\n                original: originalRadiation,\n                limited: solarRadiation,\n                reason: \"Applied safety limits (2.0 - 8.0 kWh/m\\xb2/day)\"\n            };\n        }\n        // 5. Preparar respuesta final\n        const result = {\n            location: {\n                lat: Number.parseFloat(lat),\n                lng: Number.parseFloat(lng),\n                city: weatherData.name,\n                country: weatherData.sys.country\n            },\n            weather: {\n                temperature: weatherData.main.temp,\n                humidity: weatherData.main.humidity,\n                cloudiness: weatherData.clouds.all,\n                description: weatherData.weather[0].description,\n                pressure: weatherData.main.pressure,\n                windSpeed: weatherData.wind?.speed || 0,\n                windDirection: weatherData.wind?.deg || 0,\n                visibility: weatherData.visibility || 0\n            },\n            solarRadiation: solarRadiation,\n            timestamp: new Date().toISOString(),\n            estimated: calculationMethod === \"fallback\",\n            debug: debugInfo\n        };\n        console.log(\"✅ Weather debug completed successfully\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(result);\n    } catch (error) {\n        console.error(\"❌ Error in weather debug:\", error);\n        debugInfo.errors.push(`Main error: ${error}`);\n        // Fallback completo\n        const estimatedRadiation = getEstimatedSolarRadiation(Number.parseFloat(lat), Number.parseFloat(lng));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            location: {\n                lat: Number.parseFloat(lat),\n                lng: Number.parseFloat(lng),\n                city: \"Unknown\",\n                country: \"Unknown\"\n            },\n            weather: {\n                temperature: 25,\n                humidity: 60,\n                cloudiness: 30,\n                description: \"estimated\",\n                pressure: 1013,\n                windSpeed: 0,\n                windDirection: 0,\n                visibility: 10000\n            },\n            solarRadiation: estimatedRadiation,\n            timestamp: new Date().toISOString(),\n            estimated: true,\n            error: error instanceof Error ? error.message : \"Unknown error\",\n            debug: debugInfo\n        });\n    }\n}\nfunction getEstimatedSolarRadiation(lat, lng) {\n    const absLat = Math.abs(lat);\n    // Bolivia está entre -9° y -23° de latitud\n    if (lat >= -12 && lat <= -9) {\n        return 5.8 // Norte de Bolivia (más tropical)\n        ;\n    } else if (lat >= -18 && lat < -12) {\n        return 5.4 // Centro de Bolivia\n        ;\n    } else if (lat >= -23 && lat < -18) {\n        return 5.0 // Sur de Bolivia\n        ;\n    }\n    // Para otras ubicaciones\n    if (absLat < 15) return 5.5;\n    if (absLat < 25) return 5.0;\n    if (absLat < 35) return 4.5;\n    if (absLat < 45) return 4.0;\n    return 3.5;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/weather/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fweather%2Froute&page=%2Fapi%2Fweather%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fweather%2Froute.ts&appDir=%2FUsers%2Ferwinvasquez%2FDesarrollo%2FNext%2Fgre-en%20v2%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ferwinvasquez%2FDesarrollo%2FNext%2Fgre-en%20v2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();